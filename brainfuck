#!/usr/bin/env python

# An interpreter for the Brainfuck programming language.

# Author: Joe Kitchen
# This code is UNLICENSED.  The terms of the unlicense might have been
# distributed with this software; if so, they are likely to be in the
# UNLICENSE file.  If not, the text of the unlicense, as well as more
# information about it, can be found at unlicense.org.

import sys

try:
    source = sys.argv[1]
except IndexError:
    print "Fatal Error: Brainfuck expected a source file."
    sys.exit(1)
    
try:
    with open(source,"r") as srcfile:
        code = srcfile.read()
except IOError:
    code = sys.argv[1]

# Brainfuck's tape is theoretically infinite; in this case, it is a
# 30,000-cell loop
tape = [0 for x in xrange(0,30000)]
cell = 0; inputcell = 0
if len(sys.argv) > 2:
    try:
        with open(sys.argv[2],"r") as inputfile:
            input = inputfile.read()
    except IOError:
        input = sys.argv[2]

instruction = 0
while instruction < len(code):
    if code[instruction] == "+":
        tape[cell] += 1
    elif code[instruction] == "-":
        tape[cell] -= 1
    elif code[instruction] == ">":
        cell +=1
    elif code[instruction] == "<":
        cell -= 1
    elif code[instruction] == "[":
        if tape[cell] == 0:
            looplevel = 1
            while looplevel > 0:
                instruction += 1
                if code[instruction] == "[":
                    looplevel += 1
                elif code[instruction] == "]":
                    looplevel -= 1
    elif code[instruction] == "]":
        if tape[cell] != 0:
            looplevel = 1
            while looplevel > 0:
                instruction -= 1
                if code[instruction] == "[":
                    looplevel -= 1
                elif code[instruction] == "]":
                    looplevel += 1
    elif code[instruction] == ".":
        sys.stdout.write(chr(tape[cell]))
    elif code[instruction] == ",":
        try:
            if inputcell < len(input):
                tape[cell] = ord(input[inputcell])
        except TypeError:
            print "Fatal Error: " + sys.argv[1] + " expected input."
            sys.exit(1)
        inputcell += 1
    else:
        pass
    instruction += 1
