#!/usr/bin/env python

# A brainfuck interpreter, written in python

# brainfuck is an esoteric programming language with a limited set of
# instructions.  These are:
# . output cell value
# , read value to cell
# > move pointer to next cell
# < move pointer to previous cell
# [ if the value of the current cell is zero, goto matching ]
# ] if the value of the current cell is non-zero, goto matching  [
# + increment value of cell at pointer
# - decrement value of cell at pointer

# Brainfuck works on a tape of a theoretically infinite (in practice,
# usually 30,000) number of cells.

import sys

if len(sys.argv) == 1:
    print "ERROR: Expected an argument."
    sys.exit(1)
else:
    source = sys.argv[1]
    try:
        f = open(source,"r")
        code = f.read()
        f.close()
    except IOError:
        code = sys.argv[1]

tape = [0 for x in xrange(0,30000)]
cell = 0

x = 0
while x < len(code):
    if code[x] == "+":
        tape[cell] += 1
    elif code[x] == "-":
        tape[cell] -= 1
    elif code[x] == ">":
        cell +=1
    elif code[x] == "<":
        cell -= 1
    elif code[x] == ".":
        sys.stdout.write(chr(tape[cell]))
    elif code[x] == "[":
        if tape[cell] == 0:
            looplevel = 1
            while looplevel > 0:
                x += 1
                if code[x] == "[":
                    looplevel += 1
                elif code[x] == "]":
                    looplevel -= 1
    elif code[x] == "]":
        if tape[cell] != 0:
            looplevel = 1
            while looplevel > 0:
                x -= 1
                if code[x] == "[":
                    looplevel -= 1
                elif code[x] == "]":
                    looplevel += 1
    else:
        pass
    x += 1
